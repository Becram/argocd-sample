argo-cd:
  global:
    image:
      repository: ghcr.io/becram/argocd-image-customized
      tag: v1.0
  dex:
    enabled: false
  controller:
    serviceAccount:
      create: true
      name: argocd-application-controller
      ## Annotations applied to created service account
      # annotations:
      #   eks.amazonaws.com/role-arn: "arn:aws:iam::395092651780:role/argocd-application-controller-eksserviceaccount-role"
      # ## Automount API credentials for the Service Account
      # automountServiceAccountToken: true
    resources:
      requests:
        memory: "512Mi"
        cpu: "128m"
      limits:
        memory: "2048Mi"
        cpu: "1024m"
    replicas: 1
    logLevel: debug
    enableStatefulSet: true
    extraArgs:
    - --repo-server-timeout-seconds
    - "600"
    - --status-processors
    - "50"
    - --operation-processors
    - "30"
    metrics:
      enabled: false
      # service:
        # servicePort: 8082 #default port
      serviceMonitor:
        enabled: false
      rules:
        enabled: false
  repoServer:
    serviceAccount:
      create: true
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 90
      targetMemoryUtilizationPercentage: 90
    resources:
      requests:
        memory: "256Mi"
        cpu: "128m"
      limits:
        memory: "2048Mi"
        cpu: "1024m"
    env:
    - name: ARGOCD_EXEC_TIMEOUT
      value: "5m"
    - name: XDG_CONFIG_HOME
      value: /.config
    volumes:
    - name: custom-tools
      emptyDir: {}
    initContainers:
    - name: install-ksops
      image: viaductoss/ksops:v2.5.7
      command: ["/bin/sh", "-c"]
      args:
        - echo "Installing KSOPS...";
          export PKG_NAME=ksops;
          mv ${PKG_NAME}.so /custom-tools/;
          mv $GOPATH/bin/kustomize /custom-tools/;
          echo "Done.";
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
    volumeMounts:
    - mountPath: /usr/local/bin/kustomize
      name: custom-tools
      subPath: kustomize
    # Verify this matches a XDG_CONFIG_HOME=/.config env variable
    - mountPath: /.config/kustomize/plugin/viaduct.ai/v1/ksops/ksops.so
      name: custom-tools
      subPath: ksops.so
    metrics:
      enabled: false
      # service:
        # servicePort: 8082 #default port
      serviceMonitor:
        enabled: false
        additionalLabels:
          release: kube-prometheus-stack
        namespace: kube-prometheus-stack
        interval: 30s
        scrapeTimeout: 10
  server:
    replicas: 1
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 75
      targetMemoryUtilizationPercentage: 7
    resources:
      requests:
        memory: "256Mi"
        cpu: "128m"
      limits:
        memory: "1024Mi"
        cpu: "512m"
    extraArgs:
      - --insecure
    service:
      type: NodePort
    serviceAccount:
      create: true
      name: argocd
      ## Annotations applied to created service account
      # annotations:
      #   eks.amazonaws.com/role-arn: "arn:aws:iam::395092651780:role/argocd-eksserviceaccount-role"
      # ## Automount API credentials for the Service Account
      # automountServiceAccountToken: true
    logLevel: debug
    metrics:
      enabled: false
      # service:
        # servicePort: 8082 #default port
      serviceMonitor:
        enabled: false
        additionalLabels:
          release: kube-prometheus-stack
        namespace: kube-prometheus-stack
        interval: 30s
        scrapeTimeout: 10
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - deploy.bdhoju.com
      paths:
        - /
      tls:
      - secretName: argocd-tls-certificate
        hosts:
          - deploy.bdhoju.com
    configEnabled: true
    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
        p, role:developer, applications, get, */*, allow
        p, role:developer, applications, update, */*, allow
        g, /ArgoCDAdmins, role:developer
    config:
      kustomize.buildOptions: "--enable-alpha-plugins"
      url: https://deploy.bdhoju.com
      oidc.config: |
        name: Keycloak
        issuer: https://auth.bdhoju.com/auth/realms/master
        clientID: argocd
        clientSecret: $oidc.keycloak.clientSecret
        requestedScopes: ["openid", "profile", "email", "groups"]
      application.instanceLabelKey: argocd.argoproj.io/instance
      users.anonymous.enabled: "false"
      repositories: |
        - type: helm
          name: argo-cd
          url: https://argoproj.github.io/argo-helm
        - type: helm
          name: stable
          url: https://charts.helm.sh/stable
        - type: git
          name: argocd-sample
          url: https://github.com/Becram/argocd-sample.git


      configManagementPlugins: |
        - name: kustomized-helm
          init:
            command: ["/bin/sh", "-c"]
            args: ["helm dependency build ../../../helm_base/$ARGOCD_APP_NAME || true"]
          generate:
            command: ["/bin/sh", "-c"]
            args: ["helm template  ../../../helm_base/$ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAME  --name-template $ARGOCD_APP_NAME -f values-override.yaml --include-crds > ../../../helm_base/$ARGOCD_APP_NAME/all.yml && kustomize build"]
  configs:
    createSecret: true
